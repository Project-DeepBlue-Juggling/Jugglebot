# TASK [Educate about this default zshrc] ********
#
# This default ~/.zshrc was adapted from the default zshrc provided by Oh My 
# Zsh. It was provisioned by an Ansible task that was run by the host setup
# script. If you re-run that host setup script, it will not overwrite this file.
# If you had made changes, it will produce a diff in 
# `~/.jugglebot/host_setup/diffs`.


# TASK [Educate about Jugglebot environment variables] ********
#
# You should prefer to define project-related configuration variables within 
# `~/.jugglebot/conda_env.sh`. For example, that script defines 
# `JUGGLEBOT_CONFIG_DIR="${HOME}/.jugglebot`. The default conda_env.sh was
# provisioned by an Ansible task that was run by the host setup script. If you
# re-run that host setup script, it will not overwrite that file. If you had 
# made changes, it will produce a diff in `~/.jugglebot/host_setup/diffs`.


# TASK [Include the Oh My Zsh configuration] ********
# ...

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"


# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes


# TASK [Enable H. Low's preferred Oh My Zsh theme] ********

ZSH_THEME='clean'

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"


# TASK [Disable automatic updates for Oh My Zsh] ********

# Uncomment one of the following lines to change the auto-update behavior
zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.


# TASK [Enable the bundled per-directory-history plugin] ********

plugins=( git per-directory-history )


# TASK [Configure the per-directory-history plugin] ********
#
# Note 1: H. Low uses the per-directory-history Oh My Zsh plugin within his
#   development workflow. Change $HISTORY_START_WITH_GLOBAL to false to enable
#   the per-directory behavior by default.
# Note 2: You can change this value either (a) by editing it here or (b) by
#   setting it within a zsh script within the $ZSH_CUSTOM directory.
# Note 3: See the per-directory-history repo for instructions:
#   https://github.com/jimhester/per-directory-history

export HISTORY_START_WITH_GLOBAL=true

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='nvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


# TASK [Provide an alias to edit the aliases file] ********

alias paliases='"${EDITOR:-vim}" "${ZSH_CUSTOM}/aliases.zsh" && source "${ZSH_CUSTOM}/aliases.zsh"'


# TASK [Enable keychain] ********
#
# Note: Keychain remembers ssh-agent keys across logins during a host
#   uptime session

eval "$(keychain --eval --quiet --agents ssh)"


# TASK [Reclaim Ctrl+s and Ctrl+q from the terminal] ********
#
# Note: This enables vim to bind Ctrl+s.

stty -ixon


# TASK [Include the conda initialize block] ********
# ...
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/joe/miniforge3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/joe/miniforge3/etc/profile.d/conda.sh" ]; then
        . "/home/joe/miniforge3/etc/profile.d/conda.sh"
    else
        export PATH="/home/joe/miniforge3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<


# TASK [Activate the jugglebot conda environment] ********

conda activate jugglebot


# TASK [Add ~/bin to the $PATH] ********

if [ -d "${HOME}/bin" ]; then
  export PATH="${HOME}/bin:${PATH}"
fi


# TASK [Ensure that we start in $HOME] ********
#
# Note: This is a workaround for the issue that running 
# `wsl -d <Distribution Name>` from PowerShell will begin in the working
# directory of the PowerShell session.

cd "${HOME}"

