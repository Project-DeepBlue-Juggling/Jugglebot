---
- name: Provision the Ubuntu 20.04 docker native platform host
  hosts: localhost
  connection: local
  vars:
    environments_dir: "{{ playbook_dir }}/.."

  tasks:

  - name: Provision the Bash default files
    copy:
      remote_src: yes
      src: /etc/skel/
      dest: "{{ ansible_facts['env']['HOME'] }}"
      force: no

  - name: Provision the Ubuntu environment
    import_tasks: "{{ environments_dir }}/ubuntu-common/dev_env_tasks.yml"
    vars:
      environments_dir: "{{ playbook_dir }}/.."

  - name: Require that the jugglebot Conda environment is activated
    assert:
      that: ansible_facts['env']['CONDA_DEFAULT_ENV'] == 'jugglebot'
      fail_msg: '[ERROR]: This playbook expects for the jugglebot conda environment to be activated. Activate that environment using the following command: `conda activate jugglebot`'
      quiet: yes

  - name: Add the docker package repository
    import_tasks: "{{ environments_dir }}/ubuntu-common/docker_repository_tasks.yml"
    vars:
      environments_dir: "{{ playbook_dir }}/.."

  - name: Install the Docker CLI package
    package:
      name: docker-ce-cli
      state: present
    become: yes

  - name: Ensure that the docker Python SDK is installed
    # Note 1: This should have been installed during the creation of the
    #   jugglebot environment, but we include it here for good measure because
    #   the Ansible community.docker modules rely on it.
    # Note 2: We don't install the conda docker package because we prefer to use
    #   the official docker apt package repo to manage the docker service & CLI 
    #   binaries.
    pip:
      name: docker
      state: present
 
  - name: Add the user to the docker group
    # Note: This enables the user to issue CLI commands (eg. `docker run [..]`)
    #   to the Docker Engine without sudo.
    user:
      name: "{{ ansible_facts['env']['USER'] }}"
      append: yes
      groups: docker
    become: yes

